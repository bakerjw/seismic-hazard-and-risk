% Vulnerability function illustrations
% Jack Baker
% 3/28/2018
% Four-parameter Beta discretization updated 10/21/2020
% color figure option added 12/31/2020

clear; close all; clc;

    colorspec{1} = [56 95 150]/255;
    colorspec{2} = [207 89 33]/255;
    colorspec{3} = [158 184 219]/255;
    colorspec{4} = [231 184 0]/255;
    colorspec{5} = [128 0 0]/255;
    
    linespec{1} = '-';
    linespec{2} = '-';
    linespec{3} = '-';
    linespec{4} = '-';
    linespec{5} = '-';
    


%%  settings
im = logspace(log10(0.001), log10(2), 100); % IM values to consider 
c = logspace(log10(0.02), log10(380), 200); % consequence levels to consider


%% power-law vulnerability
a = 100;
b = 1.3;
betaIM = 0.4; 

medianC = a.*im.^b;

% PDF
imLevel = 1.; % example IM of interest
cLevel = 150; % cost threshold of interest
c = sort([c cLevel]); % include this specific threshold in the consequence vector, for help with plot
pdfSF = 30; % scale factor to apply to PDF in figure (to size it appropriately for plotting)
pdfC = lognpdf(c,log(a.*imLevel.^b),betaIM);

probOfExceed = 1 - logncdf(cLevel,log(a.*imLevel.^b),betaIM) % numerical probability of shaded area

% patch of PDF exceedance area
idx = find(c>=cLevel);
patchX = [imLevel  [imLevel*ones(size(idx)) - pdfSF*pdfC(idx)] imLevel]; % x values for PDF patch
patchY = [cLevel  c(idx) cLevel];

figure
plot(im, medianC, '-k', 'linewidth', 2)
hold on
plot(im, medianC*exp(betaIM), '-', 'linewidth', 2, 'color', colorspec{3})
plot(im, medianC/exp(betaIM), '-', 'linewidth', 2, 'color', colorspec{3})
plot(im, cLevel*ones(size(im)), ':k')
plot(imLevel*ones(size(c)) - pdfSF*pdfC, c, '-', 'linewidth', 1, 'color', colorspec{2})
plot(imLevel*ones(size(c)), c, '-', 'linewidth', 1, 'color', colorspec{2})
p = patch(patchX, patchY, 'k');
set(p,'facecolor', [0.7 0.7 0.7])

% labels
text(1.6, 230,'Median','FontSize',7)
text(1.6, 310,'84%','FontSize',7)
text(1.6, 110,'16%','FontSize',7)
text(0.65, 200, sprintf('PDF, given \nIM = 1'),'FontSize',7)


xlabel('Intensity Measure, IM')
ylabel('Consequence, C')
yticks([0:100:400])
axis([0 2 0 400])

%% beta distribution vulnerability

% consequence values
x=0:0.01:1;

% parameter values
r = [0.5 2 4 7 4  ];
q = [4   7 4 2 0.5];




for i = 1:4
    f_x(:,i) = betapdf(x,r(i),q(i));
    legendtext{i} = ['r = ' num2str(r(i)) ', q = ' num2str(q(i))'];
end

figure
for i = 1:4
    plot(x, f_x(:,i), linespec{i}, 'linewidth', 2, 'color', colorspec{i}) ;
    hold on
end
xlabel('Consequence, C');
ylabel('f_C(c)');
legend(legendtext, 'location', 'northeast')
axis([0 1 0 6])

%% four-parameter beta

dx = 0.001;
x=0:dx:1;

% parameter values
r = 2;
q = 7;
p_0 = 0.2;
p_1 = 0.1;

% continuous part of the distribution
f_z = (1-p_0-p_1) * betapdf(x,r,q);

% discretize
dxDisc = 0.05;
xDisc = 0.025:dxDisc:0.975;
for i=1:length(xDisc) % aggregate probabilities
    idx = ( (x>xDisc(i)-0.5*dxDisc) &  (x<=xDisc(i)+0.5*dxDisc)); % relevant range of x values
    f_zCont(i) = sum(f_z(idx))*dx;
end
    
% add discrete probabilities to appropriate bins 
f_zCont(1) = f_zCont(1) + p_0;
f_zCont(end) = f_zCont(end) + p_1;
f_z(1) = p_0;
f_z(2) = p_1;


figure
bar(xDisc, f_zCont, 1, 'FaceColor',colorspec{3})
hold on
xlabel('Consequence, C');
ylabel('Probability');
% axis([-0.05 1.05 0 0.25])
axis([0 1 0 0.25])





